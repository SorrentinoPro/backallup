#!/bin/bash

# Set the package directory
PACKAGE_DIR=/backallup

# Create the package directory
mkdir -p ${PACKAGE_DIR}

# Create the backups directory
mkdir -p ${PACKAGE_DIR}/backups

# Create the profiles directory
mkdir -p ${PACKAGE_DIR}/profiles

# Create the cyberpanel profile directory
mkdir -p ${PACKAGE_DIR}/profiles/cyberpanel

# Create the back2back.json file
echo '{"domains2goback": {"domain2goback": "", "path2goback": [""], "mysql2goback": {"host": "root", "user": "localhost", "password": "", "database_name": ""}}}' >${PACKAGE_DIR}/back2back.json

# Create the back2job.json file
echo '{"back2task": "0 0 * * *", "domains2back": {"domain2back": "", "dir2back": [""], "mysql2back": {"host": "localhost", "user": "", "password": "", "database_name": ""}}}' >${PACKAGE_DIR}/back2job.json

# Create the allback2struct.json file
echo '{"version": ["1.0.0"], "profiles": {"cyberpanel": {"root2back": ["/home"], "dir2skip": ["/home/cyberpanel", "/home/docker"], "mysql2back": {"host": "localhost", "user": "root", "password": "", "database_name": [""], "database2skip": ["cyberpanel", "information_schema", "mysql", "performance_schema", "sys"]}}, "plesk": {}, "cPanel": {}, "directadmin": {}, "cwp": {}}}' >${PACKAGE_DIR}/profiles/allback2struct.json

# Create the cyberpanel back2struct.json file
echo '{"cyberpanel": {"root2back": ["/home"], "dir2skip": ["/home/cyberpanel", "/home/docker"], "mysql2back": {"host": "localhost", "user": "root", "password": "", "database_name": [""], "database2skip": ["cyberpanel", "information_schema", "mysql", "performance_schema", "sys"]}}}' >${PACKAGE_DIR}/profiles/cyberpanel/back2struct.json

if [ -f /var/lib/dpkg/info/backallup.list ]; then
    # APT installation, do something specific
    echo "Installing from APT package"
    # ...
else
    # Git installation, do something else
    echo "Installing from Git repository"

    # Check for dependencies
    DEPENDENCIES=("tar" "jq" "ip" "hostname" "uname" "date")

    # Check if the package manager is apt (Ubuntu-based) or yum (RPM-based)
    if command -v apt &>/dev/null; then
        PACKAGE_MANAGER="apt"
    elif command -v yum &>/dev/null; then
        PACKAGE_MANAGER="yum"
    else
        echo "Error: Unable to determine package manager. Please install dependencies manually."
        exit 1
    fi

    for DEPENDENCY in "${DEPENDENCIES[@]}"; do
        if ! command -v "$DEPENDENCY" &>/dev/null; then
            echo "Installing $DEPENDENCY..."
            if [ "$PACKAGE_MANAGER" = "apt" ]; then
                sudo apt update && sudo apt install -y "$DEPENDENCY"
            elif [ "$PACKAGE_MANAGER" = "yum" ]; then
                sudo yum install -y "$DEPENDENCY"
            fi
            if ! command -v "$DEPENDENCY" &>/dev/null; then
                echo "Error: Failed to install $DEPENDENCY. Please install it manually and try again."
                exit 1
            fi
        fi
    done

    # Copy the README.md file from the repository to the installation directory
    cp README.md ${PACKAGE_DIR}

    # Copy the backallup script to a directory in the system's PATH
    cp backallup /usr/local/bin/

    # Make the backallup script executable
    chmod +x /usr/local/bin/backallup
fi
